{"version":3,"sources":["main.js"],"names":["Search","[object Object]","this","params","query","limit","sort","els","container","document","querySelector","form","input","close","collapseIcon","sortSelect","vals","original","queryArray","getFromLS","setCloseState","AEL","collapse","html","txt","createElement","innerHTML","value","undefined","style","display","localStorage","getItem","LSQuery","JSON","parse","fetchData","setItem","stringify","requestQuery","fetch","encodeURI","then","res","ok","blob","json","data","children","forEach","iter","textDefault","catch","err","score","toString","replace","author","title","subreddit_name_prefixed","permalink","gilded","thisText","preview","url","arg","thistext_html","decodeHtml","addEventListener","e","getData","bind","window","resetData","sortChange","options","selectedIndex","keyCode","length","preventDefault","saveToStorage","reset","target","focus","querySelectorAll","classList","contains","parentElement","toggle","dataset","type","nextElementSibling","ht","wt","ar","link","images","variants","mp4","image","source","height","width","gif","domain"],"mappings":"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","file":"bundle.js","sourcesContent":["// if ('serviceWorker' in navigator) {\n//   window.addEventListener('load', function() {\n//     navigator.serviceWorker.register('./sw.js').then(function(registration) {\n//       // Registration was successful\n//       console.log('ServiceWorker registration successful with scope: ', registration.scope);\n//     }, function(err) {\n//       // registration failed :(\n//       console.log('ServiceWorker registration failed: ', err);\n//     });\n//   });\n// } else {\n//  console.log('Service worker not supported!')\n// }\n// commented out due to console errors\n\nclass Search {\n  constructor() {\n\n    this.params = {\n      query: '',\n      limit: 10,\n      sort: 'confidence',\n    }\n\n    // elements\n    this.els = {\n      container: document.querySelector('.container'),\n      form: document.querySelector('form'),\n      input: document.querySelector('input'),\n      close: document.querySelector('.close'),\n      collapseIcon: '', // will be added when searched\n      sortSelect: document.querySelector('select'),\n    }\n\n    this.vals = {\n      original: '',\n      queryArray: [],\n    }\n\n    // functions\n\n    this.getFromLS() // LS = localStorage\n    this.setCloseState()\n    this.AEL() // add event listeners\n    this.collapse()\n  }\n\n  decodeHtml(html) { //\n    const txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  setCloseState() {\n    if (this.els.input.value == null ||\n      this.els.input.value == undefined ||\n      this.els.input.value == '') {\n      this.els.close.style.display = 'none'\n    } else {\n      this.els.close.style.display = 'block';\n    }\n  }\n\n  getFromLS() {\n    if (!localStorage.getItem('query')) return;\n\n    const LSQuery = localStorage.getItem('query')\n\n    this.els.input.value = JSON.parse(LSQuery)[0]\n\n    this.fetchData(JSON.parse(LSQuery)[0])\n  }\n\n  saveToStorage(query = '') {\n    this.vals.queryArray = [query]\n    localStorage.setItem('query', JSON.stringify(this.vals.queryArray))\n\n    this.fetchData((JSON.parse(localStorage.getItem('query'))[0]))\n  }\n\n  fetchData(requestQuery = '') {\n    if (!requestQuery || requestQuery == '') return\n\n    fetch(`https://www.reddit.com/search.json?limit=${this.params.limit}&q=${encodeURI(requestQuery)}&sort=${this.params.sort}`)\n      .then(res => {\n        if (!res.ok) {\n          return;\n        }\n        return res\n      })\n      .then(blob => blob)\n      .then(blob => blob.json())\n      .then(blob => blob.data.children)\n      .then(blob => {\n        blob.forEach((res, iter) => {\n          if (iter == 1) {\n            this.els.container.innerHTML = this.textDefault(res)\n          } else {\n            this.els.container.innerHTML += this.textDefault(res)\n          }\n        })\n      })\n      .catch(err => this.err = err);\n  }\n\n  textDefault(res) {\n    return `\n    <section class=\"post\">\n      <span class=\"score d-block\">\n      <img src=\"img/updoot.png\" width=\"15\" style=\"margin-right: .25em; transform: translate(2px, -1px);\">\n      ${res.data.score.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      </span>\n\n      <a data-target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://reddit.com/u/${res.data.author}\">u/${res.data.author}</a>:\n\n      \"${res.data.title}\"\n          <span class=\"info d-block my-2\">\n            <a href=\"https://reddit.com/${res.data.subreddit_name_prefixed}\" data-target=\"_blank\"  rel=\"nofollow noopener noreferrer\">${res.data.subreddit_name_prefixed}</a>\n\n            &mdash;\n\n            <a data-target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://reddit.com${res.data.permalink}\">Comments</a>\n          </span>\n\n\n          <span class=\"text-warning gold ${res.data.gilded != 0 ? 'd-block' : 'd-none'}\">\n            ${res.data.gilded != 0 ? res.data.gilded : ''} &times;\n          </span>\n\n        ${this.thisText(res)}\n        ${this.preview(res.data.preview, res.data.url, res.data)}\n\n    </section>`\n  }\n\n\n  thisText(arg) {\n    if (!arg.data.thistext_html) return ''\n\n    return `\n      <div class=\"self-text\">\n      <button class=\"collapse-icon btn btn-none self-text-btn\"></button>\n      <span class=\"text\">${this.decodeHtml(arg.data.thistext_html)}</span>\n      </div>`\n  }\n\n  AEL() {\n    this.els.form.addEventListener('submit', e => {\n      this.els.container.innerHTML = ''\n      this.getData(e)\n    })\n    this.getData = this.getData.bind(this)\n\n    this.els.input.addEventListener('keyup', e => {\n      this.setCloseState()\n      if ('ontouchstart' in window) return;\n      this.getData(e)\n    })\n\n    this.els.close.addEventListener('click', this.resetData)\n    this.resetData = this.resetData.bind(this)\n\n\n    this.els.sortSelect.addEventListener('change', this.sortChange)\n    this.sortChange = this.sortChange.bind(this)\n  }\n  sortChange() {\n    this.params.sort = this.options[this.selectedIndex].value\n    this.fetchData(this.els.input.value)\n  }\n\n  getData(e) {\n    if ((e.keyCode > 36 && e.keyCode < 41) ||\n      e.keyCode == 32 ||\n      e.keyCode == 91 ||\n      e.keyCode == 9 ||\n      e.keyCode == 2 ||\n      (e.keyCode > 15 && e.keyCode < 21)) return;\n    if (this.vals.original.length > 512) {\n      this.els.container.innerHTML = '<h1>Query may not be longer than 512 characters</h1>';\n      return;\n    }\n\n    e.preventDefault()\n    document.querySelector('.container').innerHTML = ''\n    this.vals.original = this.els.input.value\n\n    this.fetchData(this.vals.original)\n    this.saveToStorage(this.vals.original)\n  }\n\n  resetData(e) {\n    this.els.form.reset()\n    this.els.container.innerHTML = '';\n    e.target.style.display = 'none';\n    this.params.sort = 'confidence';\n    this.els.input.focus()\n    this.saveToStorage()\n  }\n\n\n  collapse() {\n    this.els.collapseIcon = document.querySelectorAll('.collapse-icon')\n\n    this.els.container.addEventListener('click', e => {\n      if (e.target.classList.contains('collapse-icon')) {\n        e.target.parentElement.classList.toggle('open')\n\n        if (e.target.classList.contains('gif-toggle')) {\n          if (e.target.dataset.type == 'mp4') {\n            e.target.nextElementSibling.innerHTML = `\n          <video playsinline autoplay controls heigth=\"${e.target.dataset.ht}\" width=\"${e.target.dataset.wt}\">\n          <source src=\"${e.target.dataset.url}\" type=\"video/mp4\">\n          </video>\n          `\n          }\n        } else if (e.target.dataset.type == 'gif') {\n          e.target.nextElementSibling.innerHTML = `<img heigth=\"${e.target.dataset.ht}\" width=\"${e.target.dataset.wt} src=\"${e.target.dataset.url}\" type=\"image/gif\">`\n        }\n      }\n    })\n  }\n\n  preview(ar, link, res) {\n    if (!ar) return '';\n    if (ar.images[0].variants.mp4) {\n      const image = ar.images[0].variants.mp4.source\n\n      const { ht, wt, url } = { ht: image.height, wt: image.width, url: image.url }\n\n\n      return `<div class=\"self-text\">\n        <button class=\"collapse-icon btn btn-none gif-toggle\" data-ht=\"${ht}\" data-wt=\"${wt}\" data-url=\"${url}\" data-type=\"mp4\"></button>\n      <span class=\"text\"></span>\n      </div>`\n    } else if (ar.images[0].variants.gif) {\n      const image = ar.images[0].variants.gif.source\n\n\n      const { ht, wt, url } = { ht: image.height, wt: image.width, url: image.url }\n\n      return `<div class=\"slef-text\">\n      <button class=\"collapse-icon btn btn-none gif-toggle\" data-ht=\"${ht}\" data-wt=\"${wt}\" data-url=\"${url}\" data-type=\"gif\"></button>\n      <span class=\"text\"></span>\n      </div>`\n    }\n\n\n    const image = ar.images[0].source\n\n    const { ht, url } = { ht: image.height, url: image.url }\n\n    return `\n    <a data-target=\"_blank\" class=\"post-link\" rel=\"nofollow noopener noreferrer\" href=\"${link}\">\n      <img class=\"thumb-img\" src=\"${url}\" style=\"max-height: ${`${(ht / 9) * 16}px`}\" class=\"d-block mx-auto\">\n      <p class=\"img-domain\">${res.domain}</p>\n    </a>`\n  }\n}\n\nnew Search\n"]}