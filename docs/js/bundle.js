let _this;class Search{constructor(){_this=this,this.params={query:"",limit:10,sort:"confidence"},this.els={container:document.querySelector(".container"),form:document.querySelector("form"),input:document.querySelector("input"),close:document.querySelector(".close"),collapseIcon:"",sortSelect:document.querySelector("select")},this.vals={original:"",queryArray:[]},this.getFromLS(),this.setCloseState(),this.AEL(),this.collapse()}decodeHtml(t){var e=document.createElement("textarea");return e.innerHTML=t,e.value}setCloseState(){null==this.els.input.value||void 0==this.els.input.value||""==this.els.input.value?this.els.close.style.display="none":this.els.close.style.display="block"}getFromLS(){localStorage.getItem("query")&&(_this.els.input.value=JSON.parse(localStorage.getItem("query"))[0],_this.fetchData(JSON.parse(localStorage.getItem("query"))[0]))}saveToStorage(t=""){_this.vals.queryArray=[t],localStorage.setItem("query",JSON.stringify(_this.vals.queryArray)),_this.fetchData(JSON.parse(localStorage.getItem("query"))[0])}fetchData(t=""){t&&""!=t&&fetch(`https://www.reddit.com/search.json?limit=${this.params.limit}&q=${encodeURI(t)}&sort=${_this.params.sort}`).then(t=>{if(t.ok)return t;console.error("Bad Request")}).then(t=>t).then(t=>t.json()).then(t=>t.data.children).then(t=>{let e=0;t.forEach(t=>{1==++e?_this.els.container.innerHTML=_this.textDefault(t):_this.els.container.innerHTML+=_this.textDefault(t)})}).catch(t=>console.info(t))}textDefault(t){return`\n    <section class="post">\n      <span class="score d-block">\n      <img src="img/updoot.png" width="15" style="margin-right: .25em; transform: translate(2px, -1px);">\n      ${t.data.score.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}\n      </span>\n\n      <a data-target="_blank" rel="nofollow noopener noreferrer" href="https://reddit.com/u/${t.data.author}">u/${t.data.author}</a>:\n\n      "${t.data.title}"\n          <span class="info d-block my-2">\n            <a href="https://reddit.com/${t.data.subreddit_name_prefixed}" data-target="_blank"  rel="nofollow noopener noreferrer">${t.data.subreddit_name_prefixed}</a>\n\n            &mdash;\n\n            <a data-target="_blank" rel="nofollow noopener noreferrer" href="https://reddit.com${t.data.permalink}">Comments</a>\n          </span>\n\n\n          <span class="text-warning gold ${0!=t.data.gilded?"d-block":"d-none"}">\n            ${0!=t.data.gilded?t.data.gilded:""} &times;\n          </span>\n\n        ${_this.selfText(t)}\n        ${_this.preview(t.data.preview,t.data.url,t.data)}\n\n    </section>`}selfText(t){return t.data.selftext_html?`\n      <div class="self-text">\n      <button class="collapse-icon btn btn-none self-text-btn"></button>\n      <span class="text">${this.decodeHtml(t.data.selftext_html)}</span>\n      </div>`:""}AEL(){_this.els.form.addEventListener("submit",t=>{_this.els.container.innerHTML="",_this.getData(t)}),_this.els.input.addEventListener("keyup",t=>{_this.setCloseState(),"ontouchstart"in window||_this.getData(t)}),_this.els.close.addEventListener("click",_this.resetData),_this.els.sortSelect.addEventListener("change",_this.sortChange)}sortChange(){_this.params.sort=this.options[this.selectedIndex].value,_this.fetchData(_this.els.input.value)}getData(t){t.keyCode>36&&t.keyCode<41||32==t.keyCode||91==t.keyCode||9==t.keyCode||2==t.keyCode||t.keyCode>15&&t.keyCode<21||(_this.vals.original.length>512?container.innerHTML="<h1>Query may not be longer than 512 characters</h1>":(t.preventDefault(),document.querySelector(".container").innerHTML="",_this.vals.original=_this.els.input.value,_this.fetchData(_this.vals.original),_this.saveToStorage(_this.vals.original)))}resetData(t){_this.els.form.reset(),_this.els.container.innerHTML="",t.target.style.display="none",_this.params.sort="confidence",_this.els.input.focus(),_this.saveToStorage()}collapse(){_this.els.collapseIcon=document.querySelectorAll(".collapse-icon"),_this.els.container.addEventListener("click",t=>{t.target.classList.contains("collapse-icon")&&(t.target.parentElement.classList.toggle("open"),t.target.classList.contains("gif-toggle")?"mp4"==t.target.dataset.type&&(t.target.nextElementSibling.innerHTML=`\n          <video playsinline autoplay controls heigth="${t.target.dataset.ht}" width="${t.target.dataset.wt}">\n          <source src="${t.target.dataset.url}" type="video/mp4">\n          </video>\n          `):"gif"==t.target.dataset.type&&(t.target.nextElementSibling.innerHTML=`<img heigth="${t.target.dataset.ht}" width="${t.target.dataset.wt} src="${t.target.dataset.url}" type="image/gif">`))})}preview(t,e,a){if(!t)return"";if(t.images[0].variants.mp4){let e=t.images[0].variants.mp4.source;return`\n      <div class="self-text">\n        <button class="collapse-icon btn btn-none gif-toggle" data-ht="${e.height}" data-wt="${e.width}" data-url="${e.url}" data-type="mp4"></button>\n      <span class="text"></span>\n      </div>\n      `}if(t.images[0].variants.gif){let e=t.images[0].variants.gif.source;return`\n      <div class="self-text">\n      <button class="collapse-icon btn btn-none gif-toggle" data-ht="${e.height}" data-wt="${e.width}" data-url="${e.url}" data-type="gif"></button>\n      <span class="text"></span>\n      </div>\n      `}let s=t.images[0].source;const n=s.height;s.width;return`\n    <a data-target="_blank" class="post-link" rel="nofollow noopener noreferrer" href="${e}">\n      <img class="thumb-img" src="${s.url}" style="max-height: ${n/9*16+"px"}" class="d-block mx-auto">\n      <p class="img-domain">${a.domain}</p>\n    </a>`}}new Search;
//# sourceMappingURL=bundle.js.map
